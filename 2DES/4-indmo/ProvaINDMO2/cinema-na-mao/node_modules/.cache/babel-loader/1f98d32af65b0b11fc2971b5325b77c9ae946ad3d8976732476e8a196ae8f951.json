{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet } from 'react-native';\nexport default function HeaderTitle(_ref) {\n  let {\n    tintColor,\n    style,\n    ...rest\n  } = _ref;\n  const {\n    colors\n  } = useTheme();\n  return /*#__PURE__*/React.createElement(Animated.Text, _extends({\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.title, {\n      color: tintColor === undefined ? colors.text : tintColor\n    }, style]\n  }));\n}\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  })\n});","map":{"version":3,"names":["useTheme","React","Animated","Platform","StyleSheet","HeaderTitle","_ref","tintColor","style","rest","colors","createElement","Text","_extends","accessibilityRole","numberOfLines","styles","title","color","undefined","text","create","select","ios","fontSize","fontWeight","android","fontFamily","default"],"sources":["G:\\senai2024\\2DES\\4-indmo\\ProvaINDMO2\\cinema-na-mao\\node_modules\\@react-navigation\\elements\\src\\Header\\HeaderTitle.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextProps,\n  TextStyle,\n} from 'react-native';\n\ntype Props = Omit<TextProps, 'style'> & {\n  tintColor?: string;\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      aria-level=\"1\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,QAAQ,QAAQ,0BAA0B;AACnD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SACEC,QAAQ,EACRC,QAAQ,EAERC,UAAU,QAGL,cAAc;AAOrB,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAuC;EAAA,IAAtC;IAAEC,SAAS;IAAEC,KAAK;IAAE,GAAGC;EAAY,CAAC,GAAAH,IAAA;EACtE,MAAM;IAAEI;EAAO,CAAC,GAAGV,QAAQ,EAAE;EAE7B,oBACEC,KAAA,CAAAU,aAAA,CAACT,QAAQ,CAACU,IAAI,EAAAC,QAAA;IACZC,iBAAiB,EAAC,QAAQ;IAC1B,cAAW,GAAG;IACdC,aAAa,EAAE;EAAE,GACbN,IAAI;IACRD,KAAK,EAAE,CACLQ,MAAM,CAACC,KAAK,EACZ;MAAEC,KAAK,EAAEX,SAAS,KAAKY,SAAS,GAAGT,MAAM,CAACU,IAAI,GAAGb;IAAU,CAAC,EAC5DC,KAAK;EACL,GACF;AAEN;AAEA,MAAMQ,MAAM,GAAGZ,UAAU,CAACiB,MAAM,CAAC;EAC/BJ,KAAK,EAAEd,QAAQ,CAACmB,MAAM,CAAC;IACrBC,GAAG,EAAE;MACHC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IACd,CAAC;IACDC,OAAO,EAAE;MACPF,QAAQ,EAAE,EAAE;MACZG,UAAU,EAAE,mBAAmB;MAC/BF,UAAU,EAAE;IACd,CAAC;IACDG,OAAO,EAAE;MACPJ,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IACd;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}