{"ast":null,"code":"var _jsxFileName = \"G:\\\\senai2024\\\\2DES\\\\4-indmo\\\\ProvaINDMO2\\\\cinema-na-mao\\\\src\\\\screens\\\\DestaquesScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DestaquesScreen = () => {\n  _s();\n  const [filmesDestaque, setFilmesDestaque] = useState([]);\n  useEffect(() => {\n    const fetchFilmesDestaque = async () => {\n      const apiKey = '8ad25d0e';\n      const response = await axios.get(`http://www.omdbapi.com/?i=tt3896198&apikey=${apiKey}`);\n      if (response.data.Search) {\n        const filmes = response.data.Search.slice(0, 3); // Pegando os 3 primeiros filmes da resposta\n        const filmesComPosters = await Promise.all(filmes.map(async filme => {\n          const imdbID = filme.imdbID;\n          const posterUrl = await fetchPosterUrl(imdbID);\n          return {\n            ...filme,\n            posterUrl\n          };\n        }));\n        setFilmesDestaque(filmesComPosters);\n      }\n    };\n    fetchFilmesDestaque();\n  }, []);\n  const fetchPosterUrl = async imdbID => {\n    // Aqui você deve implementar a lógica para buscar a URL do pôster usando outra API ou serviço\n    // Exemplo simplificado usando uma função mock\n    // Substitua pela lógica real para buscar a URL do pôster de acordo com o imdbID\n    const posterUrl = `https://via.placeholder.com/150x225?text=${imdbID}`; // Exemplo usando placeholder\n    return posterUrl;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"Destaques\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.filmesContainer,\n      children: filmesDestaque.map((filme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.filme,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: filme.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: filme.posterUrl,\n          alt: filme.Title,\n          style: styles.poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(DestaquesScreen, \"XQ7GyOnWMYAErrtiGWbGLPXZOYk=\");\n_c = DestaquesScreen;\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100vh',\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  filmesContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  filme: {\n    textAlign: 'center',\n    margin: '0 16px'\n  },\n  poster: {\n    width: 150,\n    height: 225,\n    marginBottom: 8\n  }\n};\nexport default DestaquesScreen;\nvar _c;\n$RefreshReg$(_c, \"DestaquesScreen\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DestaquesScreen","_s","filmesDestaque","setFilmesDestaque","fetchFilmesDestaque","apiKey","response","get","data","Search","filmes","slice","filmesComPosters","Promise","all","map","filme","imdbID","posterUrl","fetchPosterUrl","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","filmesContainer","index","Title","src","alt","poster","_c","display","alignItems","justifyContent","minHeight","padding","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","margin","width","height","$RefreshReg$"],"sources":["G:/senai2024/2DES/4-indmo/ProvaINDMO2/cinema-na-mao/src/screens/DestaquesScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DestaquesScreen = () => {\r\n  const [filmesDestaque, setFilmesDestaque] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFilmesDestaque = async () => {\r\n      const apiKey = '8ad25d0e';\r\n      const response = await axios.get(`http://www.omdbapi.com/?i=tt3896198&apikey=${apiKey}`);\r\n      if (response.data.Search) {\r\n        const filmes = response.data.Search.slice(0, 3); // Pegando os 3 primeiros filmes da resposta\r\n        const filmesComPosters = await Promise.all(\r\n          filmes.map(async filme => {\r\n            const imdbID = filme.imdbID;\r\n            const posterUrl = await fetchPosterUrl(imdbID);\r\n            return { ...filme, posterUrl };\r\n          })\r\n        );\r\n        setFilmesDestaque(filmesComPosters);\r\n      }\r\n    };\r\n\r\n    fetchFilmesDestaque();\r\n  }, []);\r\n\r\n  const fetchPosterUrl = async (imdbID) => {\r\n    // Aqui você deve implementar a lógica para buscar a URL do pôster usando outra API ou serviço\r\n    // Exemplo simplificado usando uma função mock\r\n    // Substitua pela lógica real para buscar a URL do pôster de acordo com o imdbID\r\n    const posterUrl = `https://via.placeholder.com/150x225?text=${imdbID}`; // Exemplo usando placeholder\r\n    return posterUrl;\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.title}>Destaques</h1>\r\n      <div style={styles.filmesContainer}>\r\n        {filmesDestaque.map((filme, index) => (\r\n          <div key={index} style={styles.filme}>\r\n            <h3>{filme.Title}</h3>\r\n            <img src={filme.posterUrl} alt={filme.Title} style={styles.poster} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    minHeight: '100vh',\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  filmesContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  filme: {\r\n    textAlign: 'center',\r\n    margin: '0 16px',\r\n  },\r\n  poster: {\r\n    width: 150,\r\n    height: 225,\r\n    marginBottom: 8,\r\n  },\r\n};\r\n\r\nexport default DestaquesScreen;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}